{
  "abi": [],
  "bytecode": {
    "object": "0x60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200ec7734dee37c4ea9d8669017290f8b7ae9ef3a96fa41c47ab7293743632f83064736f6c63430007060033",
    "sourceMap": "670:848:29:-:0;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200ec7734dee37c4ea9d8669017290f8b7ae9ef3a96fa41c47ab7293743632f83064736f6c63430007060033",
    "sourceMap": "670:848:29:-:0;;;;;;;;",
    "linkReferences": {}
  },
  "methodIdentifiers": {},
  "rawMetadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;` Since it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the {SafeMath} overflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never directly accessed.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"node_modules/@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0x21662e4254ce4ac8570b30cc7ab31435966b3cb778a56ba4d09276881cfb2437\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acce8fe6adc670f9987a8b6aedc4cc0abcd0dcd2e152d649a12099d735bd7bad\",\"dweb:/ipfs/QmXAk17oK3daBmA8CGyVcU56L496jW3U6Ef1WkfHyB1JAV\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.7.6+commit.7338295f"
    },
    "language": "Solidity",
    "output": {
      "abi": [],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "node_modules/@openzeppelin/contracts/utils/Counters.sol": "Counters"
      },
      "libraries": {}
    },
    "sources": {
      "node_modules/@openzeppelin/contracts/math/SafeMath.sol": {
        "keccak256": "0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52",
        "urls": [
          "bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c",
          "dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Counters.sol": {
        "keccak256": "0x21662e4254ce4ac8570b30cc7ab31435966b3cb778a56ba4d09276881cfb2437",
        "urls": [
          "bzz-raw://acce8fe6adc670f9987a8b6aedc4cc0abcd0dcd2e152d649a12099d735bd7bad",
          "dweb:/ipfs/QmXAk17oK3daBmA8CGyVcU56L496jW3U6Ef1WkfHyB1JAV"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "node_modules/@openzeppelin/contracts/utils/Counters.sol",
    "id": 8446,
    "exportedSymbols": {
      "Counters": [
        8445
      ],
      "SafeMath": [
        6146
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:1486:29",
    "nodes": [
      {
        "id": 8397,
        "nodeType": "PragmaDirective",
        "src": "33:31:29",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0",
          "<",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 8398,
        "nodeType": "ImportDirective",
        "src": "66:30:29",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/math/SafeMath.sol",
        "file": "../math/SafeMath.sol",
        "scope": 8446,
        "sourceUnit": 6147,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 8445,
        "nodeType": "ContractDefinition",
        "src": "670:848:29",
        "nodes": [
          {
            "id": 8402,
            "nodeType": "UsingForDirective",
            "src": "693:27:29",
            "nodes": [],
            "libraryName": {
              "id": 8400,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6146,
              "src": "699:8:29",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$6146",
                "typeString": "library SafeMath"
              }
            },
            "typeName": {
              "id": 8401,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "712:7:29",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 8405,
            "nodeType": "StructDefinition",
            "src": "726:374:29",
            "nodes": [],
            "canonicalName": "Counters.Counter",
            "members": [
              {
                "constant": false,
                "id": 8404,
                "mutability": "mutable",
                "name": "_value",
                "nodeType": "VariableDeclaration",
                "scope": 8405,
                "src": "1065:14:29",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 8403,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1065:7:29",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Counter",
            "scope": 8445,
            "visibility": "public"
          },
          {
            "id": 8416,
            "nodeType": "FunctionDefinition",
            "src": "1106:112:29",
            "nodes": [],
            "body": {
              "id": 8415,
              "nodeType": "Block",
              "src": "1180:38:29",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 8412,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8407,
                      "src": "1197:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Counter_$8405_storage_ptr",
                        "typeString": "struct Counters.Counter storage pointer"
                      }
                    },
                    "id": 8413,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "_value",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 8404,
                    "src": "1197:14:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 8411,
                  "id": 8414,
                  "nodeType": "Return",
                  "src": "1190:21:29"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "current",
            "parameters": {
              "id": 8408,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8407,
                  "mutability": "mutable",
                  "name": "counter",
                  "nodeType": "VariableDeclaration",
                  "scope": 8416,
                  "src": "1123:23:29",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$8405_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "id": 8406,
                    "name": "Counter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8405,
                    "src": "1123:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$8405_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1122:25:29"
            },
            "returnParameters": {
              "id": 8411,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8410,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8416,
                  "src": "1171:7:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8409,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1171:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1170:9:29"
            },
            "scope": 8445,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 8428,
            "nodeType": "FunctionDefinition",
            "src": "1224:178:29",
            "nodes": [],
            "body": {
              "id": 8427,
              "nodeType": "Block",
              "src": "1277:125:29",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 8425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 8421,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8418,
                        "src": "1376:7:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$8405_storage_ptr",
                          "typeString": "struct Counters.Counter storage pointer"
                        }
                      },
                      "id": 8423,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8404,
                      "src": "1376:14:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 8424,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1394:1:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1376:19:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8426,
                  "nodeType": "ExpressionStatement",
                  "src": "1376:19:29"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increment",
            "parameters": {
              "id": 8419,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8418,
                  "mutability": "mutable",
                  "name": "counter",
                  "nodeType": "VariableDeclaration",
                  "scope": 8428,
                  "src": "1243:23:29",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$8405_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "id": 8417,
                    "name": "Counter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8405,
                    "src": "1243:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$8405_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1242:25:29"
            },
            "returnParameters": {
              "id": 8420,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1277:0:29"
            },
            "scope": 8445,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 8444,
            "nodeType": "FunctionDefinition",
            "src": "1408:108:29",
            "nodes": [],
            "body": {
              "id": 8443,
              "nodeType": "Block",
              "src": "1461:55:29",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 8441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 8433,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8430,
                        "src": "1471:7:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$8405_storage_ptr",
                          "typeString": "struct Counters.Counter storage pointer"
                        }
                      },
                      "id": 8435,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8404,
                      "src": "1471:14:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 8439,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1507:1:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 8436,
                            "name": "counter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8430,
                            "src": "1488:7:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$8405_storage_ptr",
                              "typeString": "struct Counters.Counter storage pointer"
                            }
                          },
                          "id": 8437,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8404,
                          "src": "1488:14:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 8438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5995,
                        "src": "1488:18:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 8440,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1488:21:29",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1471:38:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8442,
                  "nodeType": "ExpressionStatement",
                  "src": "1471:38:29"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decrement",
            "parameters": {
              "id": 8431,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8430,
                  "mutability": "mutable",
                  "name": "counter",
                  "nodeType": "VariableDeclaration",
                  "scope": 8444,
                  "src": "1427:23:29",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$8405_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "id": 8429,
                    "name": "Counter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8405,
                    "src": "1427:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$8405_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1426:25:29"
            },
            "returnParameters": {
              "id": 8432,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1461:0:29"
            },
            "scope": 8445,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": {
          "id": 8399,
          "nodeType": "StructuredDocumentation",
          "src": "98:571:29",
          "text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`\n Since it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the {SafeMath}\n overflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never\n directly accessed."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          8445
        ],
        "name": "Counters",
        "scope": 8446
      }
    ],
    "license": "MIT"
  },
  "id": 29
}